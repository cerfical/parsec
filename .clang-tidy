Checks:
  - bugprone-*
  - cppcoreguidelines-*
  - misc-*
  - modernize-*
  - performance-*
  - readability-*
  - clang-analyzer
  - -modernize-use-trailing-return-type
  - -readability-uppercase-literal-suffix

CheckOptions:
  # All type-defining constructs are always in `CamelCase`
  readability-identifier-naming.ClassCase: CamelCase
  readability-identifier-naming.ConceptCase: CamelCase
  readability-identifier-naming.EnumCase: CamelCase
  readability-identifier-naming.TypeAliasCase: CamelCase
  readability-identifier-naming.TypeTemplateParameterCase: CamelCase
  readability-identifier-naming.UnionCase: CamelCase

  # Constants are also `CamelCase` to distinguish them from ordinary variables
  readability-identifier-naming.ConstexprVariableCase: CamelCase
  readability-identifier-naming.EnumConstantCase: CamelCase

  # Functions, methods and variables are `camelBack`
  readability-identifier-naming.FunctionCase: camelBack
  readability-identifier-naming.MemberCase: camelBack
  readability-identifier-naming.ParameterCase: camelBack
  readability-identifier-naming.PrivateMemberCase: camelBack
  readability-identifier-naming.ValueTemplateParameterCase: camelBack
  readability-identifier-naming.VariableCase: camelBack

  # Make data member names different from their associated getters
  readability-identifier-naming.PrivateMemberSuffix: _
  
  # Special handling of namespaces and macros
  readability-identifier-naming.MacroDefinitionCase: UPPER_CASE
  readability-identifier-naming.NamespaceCase: lower_case
  
  # Ignore simple struct-like types
  cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic: true
  misc-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic: true
  
  # Allow easy initialization of PImpl implementation classes
  cppcoreguidelines-non-private-member-variables-in-classes.IgnorePublicMemberVariables: true
  misc-non-private-member-variables-in-classes.IgnorePublicMemberVariables: true
